=pod

=head1 NAME

icesh - control window properties and the IceWM window manager

=head1 SYNOPSIS

=over

=item B<icesh> [I<OPTIONS>] I<ACTIONS>

=back

=head1 DESCRIPTION

B<icesh> provides 59 commands to change or query a window's state,
and to interact with the L<icewm(1)> window manager.

=head1 OPTIONS

B<icesh> recognizes the following options:

=head2 COMMAND OPTIONS

A command option specifies the window or windows to which subsequent
arguments apply. If no command option is given, but an argument does
require a window, then a selection crossbar is invoked to select the
desired window interactively. Some arguments do not require this.

=over

=item B<-w>, B<-window> I<WINDOW_ID>

Specifies the identifier of the window, I<WINDOW_ID>, for which the
action applies.  Special identifiers are B<root> for the root window
and B<focus> for the currently focused window.

=item B<-c>, B<-class> I<WM_CLASS>

Specifies the window manager class, I<WM_CLASS>, for which the action
applies.  If I<WM_CLASS> contains a period, only windows with exactly
the same I<WM_CLASS> property are matched.  If there is no period,
windows of the same class and windows of the same instance (aka. I<-name>)
are selected.

=item B<-r>, B<-root>

Is equivalent to B<-window> B<root>.

=item B<-f>, B<-focus>

Is equivalent to B<-window> B<focus>.

=item B<-a>, B<-all>

Selects all clients of the window manager.

=item B<-s>, B<-shown>

Selects all currently mapped clients of the window manager.

=item B<-p>, B<-pid> I<PID>

Selects clients which have a _NET_WM_PID property equal to I<PID>.

=item B<-W>, B<-Workspace> I<WORKSPACE>

Selects clients which are on workspace I<WORKSPACE>, which can either be
a workspace name or a workspace number counting from zero.

=back

=head2 GENERAL OPTIONS

The following options are identical for every icewm command.

=over

=item B<-d>, B<-display> I<DISPLAY>

Specifies the X11 DISPLAY.  If unspecified, defaults to B<$DISPLAY>.

=item B<-h>, B<--help>

Print a brief usage statement to F<stdout> and exit.

=item B<-V>, B<--version>

Print the program version to F<stdout> and exit.

=item B<-C>, B<--copying>

Print copying permissions to F<stdout> for the program and exit.

=back

=head1 ARGUMENTS

B<icesh> expects one or more action arguments:

=over

=item B<ACTIONS> ::= I<ACTION> [I<ACTION>]*

=back

Where I<ACTION> can either be a window action or a manager action.

=head2 WINDOW ACTIONS

The following actions affect the selected window or windows.

=over

=item B<activate>

Activate the window, aka. I<to focus>.

=item B<close>

Close the window.

=item B<kill>

Terminate the window.

=item B<id>

Print window identifiers for the selected windows.

=item B<list>

Show window details, like geometry and names.

=item B<lower>

Lower the window.

=item B<raise>

Raise the window.

=item B<above>

Stack the window above others.

=item B<below>

Stack the window below others.

=item B<rollup>

Rollup the specified window.

=item B<fullscreen>

Set the window to fullscreen.

=item B<maximize>

Maximize the window.

=item B<minimize>

Minimize the window.

=item B<restore>

Restore the window to normal.

=item B<hide>

Make window hidden.

=item B<unhide>

Undo window hidden.

=item B<skip>

Don't show window on taskbar.

=item B<unskip>

Do show window on taskbar.

=item B<resize> I<WIDTH> I<HEIGHT>

Resize window to I<WIDTH> by I<HEIGHT> window units.

=item B<move> I<X> I<Y>

Move window to screen position I<X> I<Y>.
Negative values start from bottom right.

=item B<moveby> I<X> I<Y>

Displace window by I<X> I<Y> pixels.

=item B<setIconTitle> I<TITLE>

Set the icon title to I<TITLE>.

=item B<getIconTitle>

Print the icon title.

=item B<setWindowTitle> I<TITLE>

Set the window title to I<TITLE>.

=item B<getWindowTitle>

Print the window title.

=item B<setGeometry> I<GEOMETRY>

Set the window geometry to I<GEOMETRY>.

=item B<getGeometry>

Print the window geometry.

=item B<setState> I<MASK> I<STATE>

Set the I<GNOME window state> to I<STATE>.  Only bits selected by
I<MASK> are affected.  See below for I<STATE> and I<MASK> symbols.

=item B<toggleState> I<STATE>

Toggle the I<GNOME window state> bits specified by the I<STATE>
expression.  See below for I<STATE> symbols.

=item B<getState>

Print the I<GNOME window state> for the specified window.

=item B<setHints> I<HINTS>

Set the I<GNOME window hints> to I<HINTS>. See below for symbols.

=item B<getHints>

Print the I<GNOME window hints> for the specified window.

=item B<setLayer> I<LAYER>

Move the specified window to another I<GNOME window layer>.
See below for I<LAYER> symbols.

=item B<getLayer>

Print the I<GNOME window layer> for the specified window.

=item B<setWorkspace> I<WORKSPACE>

Move the specified window to another workspace.  Select the root
window to change the current workspace. If I<WORKSPACE> is C<All>
then the specified window becomes visible on all workspaces.

=item B<getWorkspace>

Print the workspace for the specified window.

=item B<opacity> [I<OPACITY>]

Print the window opacity if I<OPACITY> is not given,
otherwise set the window opacity to I<OPACITY>.

=item B<setTrayOption> I<TRAYOPTION>

Set the I<IceWM tray option> for the specified window to I<TRAYOPTION>.
See I<IceWM tray options>, below, for I<TRAYOPTION> symbols.

=item B<getTrayOption>

Print the I<IceWM tray option> for the specified window.

=back

=head2 MANAGER ACTIONS

The following actions control the IceWM window manager and therefore
do not require a window option:

=over

=item B<listWorkspaces>

List the names of all workspaces.

=item B<goto> I<WORKSPACE>

Change the current workspace to I<WORKSPACE>.

=item B<workspaces> [I<COUNT>]

Print the number of workspaces if I<COUNT> is not given,
otherwise set the number of workspaces to I<COUNT>.

=item B<setWorkspaceName> I<INDEX> I<NAME>

Change the name of the workspace I<INDEX> to I<NAME>, where I<INDEX> is
a workspace number starting from zero.

=item B<setWorkspaceNames> I<NAME> [I<NAME>]*

Change the workspace names to the list of I<NAME>s.

=item B<check>

Print information about the current window manager, like name,
version, class, locale, command, host name and pid.

=item B<clients>

List all managed client windows, their titles and geometries.

=item B<shown>

List all managed client windows for the current desktop,
their titles and geometries.

=item B<windows>

List all toplevel windows, their titles and geometries.

=item B<logout>

Ask IceWM to execute the C<LogoutCommand>.

=item B<reboot>

Ask IceWM to execute the C<RebootCommand>.

=item B<shutdown>

Ask IceWM to execute the C<ShutdownCommand>.

=item B<cancel>

Ask IceWM to cancel the logout/reboot/shutdown.

=item B<about>

Ask IceWM to show the about window.

=item B<windowlist>

Ask IceWM to show the window list window.

=item B<restart>

Ask IceWM to restart.

=item B<suspend>

Ask IceWM to execute the C<SuspendCommand>.

=item B<guievents>

Monitor the B<ICEWM_GUI_EVENT> property and report all changes.

=item B<colormaps>

Monitor which colormap is installed.

=item B<runonce> I<program> [I<arguments...>]

This action is meant to be used together with the B<-class> option.
Only if no window is matched by I<WM_CLASS> then
I<program> [I<arguments...>] is executed.

=back

=head2 EXPRESSIONS

Some of the window actions require one or two I<EXPRESSION> arguments.

=over

=item B<EXPRESSION> ::= I<SYMBOL> | I<EXPRESSION> { C<+> | C<|> }
I<SYMBOL>

=back

Each I<SYMBOL> may be from one of the following applicable domains:

=over

=item I<GNOME window state>

Named symbols of the domain I<GNOME window state> (numeric range:
0-1023):

    AllWorkspaces          (1)
    Sticky                 (1)
    Minimized              (2)
    Maximized             (12)
    MaximizedVert          (4)
    MaximizedVertical      (4)
    MaximizedHoriz         (8)
    MaximizedHorizontal    (8)
    Hidden                (16)
    Rollup                (32)
    All                 (1023)

These symbols are used with the I<MASK> and I<STATE> arguments to the
C<setState> and C<toggleState> actions.

=item I<GNOME window hint>

Named symbols of the domain I<GNOME window hint> (numeric range: 0-63):

    SkipFocus              (1)
    SkipWindowMenu         (2)
    SkipTaskBar            (4)
    FocusOnClick          (16)
    DoNotCover            (32)
    All                   (63)

These symbols are used with the I<HINTS> argument to the C<setHints>
action.

=item I<GNOME window layer>

Named symbols of the domain I<GNOME window layer> (numeric range: 0-15):

    Desktop                (0)
    Below                  (2)
    Normal                 (4)
    OnTop                  (6)
    Dock                   (8)
    AboveDock             (10)
    Menu                  (12)

These symbols are used with the I<LAYER> argument to the C<setLayer>
action.

=item I<IceWM tray option>

Named symbols of the domain I<IceWM tray option> (numeric range: 0-2):

    Ignore                 (0)
    Minimized              (1)
    Exclusive              (2)

These symbols are used with the I<TRAYOPTION> argument to the
C<setTrayOption> action.

=back

=head1 USAGE

The purpose of B<icesh> is to provide commands that can be used from a
shell script (see L<sh(1)>) to affect the state, geometry and hints
associated with a window, or to list and parse information about
existing windows.

It should be noted that B<icesh> works on any window manager that is
compliant with the I<GNOME WinWM/WMH specification>.  Some commands,
like C<setTrayOption> and the actions, however, are IceWM specific.

=head1 EXAMPLES

List all workspace names:

    icesh listWorkspaces

Example output:

    workspace #0: `main'
    workspace #1: `web'
    workspace #2: `doc'
    workspace #3: `dev'

Close terminal work.

    icesh -c work.XTerm close

Activate terminal fun.

    icesh -c fun.XTerm activate

Print opacity for all xterms.

    icesh -c xterm.XTerm opacity

Change opacity for all xterms.

    icesh -c xterm.XTerm opacity 84

=head1 ENVIRONMENT

The following environment variables are examined by B<icesh>:

=over

=item B<DISPLAY>

The display to use if the B<-display> option is unspecified.

=back

=head1 COMPLIANCE

While B<icesh> is largely compliant with the GNOME WinWM/WMH
specification, it only minimally supports NetWM/EWMH.

=head1 SEE ALSO

L<icewm(1)>, L<wmctrl(1)>, L<xdotool(1)>, L<xprop(1)>, L<xwininfo(1)>.

=head1 BUGS

B<icesh> had no known bugs at the time of release.  Please report bugs
for current versions to the source code repository at
L<https://github.com/bbidulock/icewm/issues>.

=head1 AUTHOR

Brian Bidulock L<mailto:bidulock@openss7.org>.

See B<--copying> for full copyright notice and copying permissions.

=head1 LICENSE

B<IceWM> is licensed under the GNU Library General Public License.
See the F<COPYING> file in the distribution or use the B<--copying> flag
to display copying permissions.

=cut

# vim: set sw=4 tw=72 nocin spell spelllang=en_ca:
